services:
  web:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: poetry run python manage.py runserver 0.0.0.0:8002
    volumes:
      - .:/app
      - ./docker/entrypoint.sh:/app/entrypoint.sh
    ports:
      - "8002:8002"
    entrypoint: ["sh", "/app/entrypoint.sh"]
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_started
    restart: always
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}

  db:
    image: postgres:latest
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "6543:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: trust
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    volumes:
      - minio_data:/data
    restart: always

volumes:
  postgres_data:
  minio_data: